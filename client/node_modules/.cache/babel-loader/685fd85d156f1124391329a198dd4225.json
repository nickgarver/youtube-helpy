{"ast":null,"code":"import _regeneratorRuntime from \"/Users/luna/Documents/GitHub/youtube-helpy/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/luna/Documents/GitHub/youtube-helpy/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/luna/Documents/GitHub/youtube-helpy/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/luna/Documents/GitHub/youtube-helpy/client/src/components/FileUpload.js\";\n\nimport React, { Fragment, useState } from 'react';\nimport Message from './Message';\nimport Progress from './Progress';\nimport { useDropzone } from \"react-dropzone\";\nimport axios from 'axios';\n\nvar FileUpload = function FileUpload() {\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      file = _useState2[0],\n      setFile = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      filename = _useState4[0],\n      setFilename = _useState4[1];\n\n  var _useState5 = useState({}),\n      _useState6 = _slicedToArray(_useState5, 2),\n      uploadedFile = _useState6[0],\n      setUploadedFile = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      message = _useState8[0],\n      setMessage = _useState8[1];\n\n  var _useState9 = useState(0),\n      _useState10 = _slicedToArray(_useState9, 2),\n      uploadPercentage = _useState10[0],\n      setUploadPercentage = _useState10[1];\n\n  var _useDropzone = useDropzone({\n    maxFiles: 1,\n    // number of files,\n    accept: \"audio/mpeg\",\n    onDrop: function onDrop(acceptedFile) {\n      setFile( // convert preview string into a URL\n      Object.assign(acceptedFile[0], {\n        preview: URL.createObjectURL(acceptedFile[0])\n      }));\n      setFilename(acceptedFile[0].name);\n    }\n  }),\n      getRootProps = _useDropzone.getRootProps,\n      getInputProps = _useDropzone.getInputProps,\n      isDragActive = _useDropzone.isDragActive,\n      isDragReject = _useDropzone.isDragReject;\n\n  var onSubmit = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n      var formData, res, _res$data, fileName, filePath;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              e.preventDefault();\n              formData = new FormData();\n              formData.append('file', file);\n              _context.prev = 3;\n              _context.next = 6;\n              return axios.post('/upload', formData, {\n                headers: {\n                  'Content-Type': 'multipart/form-data'\n                },\n                onUploadProgress: function onUploadProgress(progressEvent) {\n                  setUploadPercentage(parseInt(Math.round(progressEvent.loaded * 100 / progressEvent.total))); // Clear percentage\n\n                  setTimeout(function () {\n                    return setUploadPercentage(0);\n                  }, 10000);\n                }\n              });\n\n            case 6:\n              res = _context.sent;\n              _res$data = res.data, fileName = _res$data.fileName, filePath = _res$data.filePath;\n              setUploadedFile({\n                fileName: fileName,\n                filePath: filePath\n              });\n              setMessage('File Uploaded');\n              _context.next = 15;\n              break;\n\n            case 12:\n              _context.prev = 12;\n              _context.t0 = _context[\"catch\"](3);\n\n              if (_context.t0.response.status === 500) {\n                setMessage('There was a problem with the server');\n              } else {\n                //ffmpeg then youtube here\n                setMessage(_context.t0.response.data.msg);\n              }\n\n            case 15:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[3, 12]]);\n    }));\n\n    return function onSubmit(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"uploadBlock\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }, message ? /*#__PURE__*/React.createElement(Message, {\n    msg: message,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 20\n    }\n  }) : null, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: onSubmit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", Object.assign({\n    className: \"custom-file mb-4\"\n  }, getRootProps(), {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", Object.assign({\n    id: \"customFile\"\n  }, getInputProps(), {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"custom-file-label\",\n    htmlFor: \"customFile\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 15\n    }\n  }, filename.length < 1 && !isDragActive && 'Click here or drop a file to upload!', isDragActive && !isDragReject && \"Drop it like it's hot!\", filename.length > 0 && !isDragReject && filename)), /*#__PURE__*/React.createElement(Progress, {\n    percentage: uploadPercentage,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"Upload\",\n    className: \"btn btn-primary btn-block mt-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 11\n    }\n  })), uploadedFile ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mt-5\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-6 m-auto\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"text-center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 15\n    }\n  }, uploadedFile.fileName), /*#__PURE__*/React.createElement(\"audio\", {\n    src: file.preview,\n    controls: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 15\n    }\n  }))) : null));\n};\n\nexport default FileUpload;","map":{"version":3,"sources":["/Users/luna/Documents/GitHub/youtube-helpy/client/src/components/FileUpload.js"],"names":["React","Fragment","useState","Message","Progress","useDropzone","axios","FileUpload","file","setFile","filename","setFilename","uploadedFile","setUploadedFile","message","setMessage","uploadPercentage","setUploadPercentage","maxFiles","accept","onDrop","acceptedFile","Object","assign","preview","URL","createObjectURL","name","getRootProps","getInputProps","isDragActive","isDragReject","onSubmit","e","preventDefault","formData","FormData","append","post","headers","onUploadProgress","progressEvent","parseInt","Math","round","loaded","total","setTimeout","res","data","fileName","filePath","response","status","msg","length"],"mappings":"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","sourcesContent":["import React, { Fragment, useState } from 'react';\nimport Message from './Message';\nimport Progress from './Progress';\nimport { useDropzone } from \"react-dropzone\"\nimport axios from 'axios';\n\nconst FileUpload = () => {\n  const [file, setFile] = useState({});\n  const [filename, setFilename] = useState('');\n  const [uploadedFile, setUploadedFile] = useState({});\n  const [message, setMessage] = useState('');\n  const [uploadPercentage, setUploadPercentage] = useState(0);\n\n  const { getRootProps, getInputProps, isDragActive, isDragReject} = useDropzone({\n    maxFiles: 1, // number of files,\n    accept: \"audio/mpeg\",\n    onDrop: (acceptedFile) => {\n      setFile(\n        // convert preview string into a URL\n        Object.assign(acceptedFile[0], {\n          preview: URL.createObjectURL(acceptedFile[0]),\n        })\n      );\n      setFilename(acceptedFile[0].name);\n    },\n  })\n\n  const onSubmit = async e => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append('file', file);\n\n    try {\n      const res = await axios.post('/upload', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        },\n        onUploadProgress: progressEvent => {\n          setUploadPercentage(\n            parseInt(\n              Math.round((progressEvent.loaded * 100) / progressEvent.total)\n            )\n          );\n\n          // Clear percentage\n          setTimeout(() => setUploadPercentage(0), 10000);\n        }\n      });\n\n      const { fileName, filePath } = res.data;\n\n      setUploadedFile({ fileName, filePath });\n\n      setMessage('File Uploaded');\n    } catch (err) {\n      if (err.response.status === 500) {\n        setMessage('There was a problem with the server');\n      } else {\n        //ffmpeg then youtube here\n        setMessage(err.response.data.msg);\n      }\n    }\n  };\n\n  return (\n    <Fragment>\n      <div id=\"uploadBlock\">\n        {message ? <Message msg={message} /> : null}\n        <form onSubmit={onSubmit}>\n          <div className='custom-file mb-4' {...getRootProps()}>\n            <input id='customFile' {...getInputProps()} />\n              <label className='custom-file-label' htmlFor='customFile'>\n                {filename.length < 1 && !isDragActive && 'Click here or drop a file to upload!'}\n                {isDragActive && !isDragReject && \"Drop it like it's hot!\"}\n                {filename.length > 0 && !isDragReject && filename}\n              </label>\n          </div>\n\n          <Progress percentage={uploadPercentage} />\n\n          <input\n            type='submit'\n            value='Upload'\n            className='btn btn-primary btn-block mt-4'\n          />\n        </form>\n\n        {uploadedFile ? (\n          <div className='row mt-5'>\n            <div className='col-md-6 m-auto'>\n              <h3 className='text-center'>{uploadedFile.fileName}</h3>\n              <audio src={file.preview} controls/>\n            </div>\n          </div>\n        ) : null}\n        </div>\n    </Fragment>\n  );\n};\n\nexport default FileUpload;\n"]},"metadata":{},"sourceType":"module"}