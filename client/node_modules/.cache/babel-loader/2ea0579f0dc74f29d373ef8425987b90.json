{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/luna/Documents/GitHub/digital-ocean-tutorial/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useDropzone } from \"react-dropzone\";\nimport \"./App.css\";\n\nfunction App() {\n  _s();\n\n  const [files, setFiles] = useState([]);\n  const {\n    getRootProps,\n    getInputProps\n  } = useDropzone({\n    maxFiles: 1,\n    // number of files,\n    accept: \"audio/mpeg\",\n    onDrop: acceptedFiles => {\n      setFiles(acceptedFiles.map(file => Object.assign(file, {\n        preview: file\n      })));\n    }\n  });\n  const images = files.map(file => /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"audio\", {\n        controls: true,\n        children: /*#__PURE__*/_jsxDEV(\"source\", {\n          src: file,\n          type: \"audio/mpeg\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)\n  }, file.name, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", { ...getRootProps(),\n      children: [/*#__PURE__*/_jsxDEV(\"input\", { ...getInputProps()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Drop files here\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: images\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"bD02hT2rlpHP3mPQRBsw7RYIxyE=\", false, function () {\n  return [useDropzone];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/luna/Documents/GitHub/digital-ocean-tutorial/src/App.js"],"names":["React","useState","useDropzone","App","files","setFiles","getRootProps","getInputProps","maxFiles","accept","onDrop","acceptedFiles","map","file","Object","assign","preview","images","name"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,QAA4B,gBAA5B;AACA,OAAO,WAAP;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,EAAD,CAAlC;AAEA,QAAM;AAAEK,IAAAA,YAAF;AAAgBC,IAAAA;AAAhB,MAAkCL,WAAW,CAAC;AAClDM,IAAAA,QAAQ,EAAE,CADwC;AACrC;AACbC,IAAAA,MAAM,EAAE,YAF0C;AAGlDC,IAAAA,MAAM,EAAGC,aAAD,IAAmB;AACzBN,MAAAA,QAAQ,CACNM,aAAa,CAACC,GAAd,CAAmBC,IAAD,IAChBC,MAAM,CAACC,MAAP,CAAcF,IAAd,EAAoB;AAClBG,QAAAA,OAAO,EAAEH;AADS,OAApB,CADF,CADM,CAAR;AAOD;AAXiD,GAAD,CAAnD;AAcA,QAAMI,MAAM,GAAGb,KAAK,CAACQ,GAAN,CAAWC,IAAD,iBACvB;AAAA,2BACE;AAAA,6BACE;AAAO,QAAA,QAAQ,MAAf;AAAA,+BACE;AAAQ,UAAA,GAAG,EAAEA,IAAb;AAAmB,UAAA,IAAI,EAAC;AAAxB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF,KAAUA,IAAI,CAACK,IAAf;AAAA;AAAA;AAAA;AAAA,UADa,CAAf;AAUA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE,oBAASZ,YAAY,EAArB;AAAA,8BACE,sBAAWC,aAAa;AAAxB;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAKE;AAAA,gBAAMU;AAAN;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AASD;;GApCQd,G;UAGiCD,W;;;KAHjCC,G;AAsCT,eAAeA,GAAf","sourcesContent":["import React, { useState } from \"react\"\nimport { useDropzone } from \"react-dropzone\"\nimport \"./App.css\"\n\nfunction App() {\n  const [files, setFiles] = useState([])\n\n  const { getRootProps, getInputProps } = useDropzone({\n    maxFiles: 1, // number of files,\n    accept: \"audio/mpeg\",\n    onDrop: (acceptedFiles) => {\n      setFiles(\n        acceptedFiles.map((file) =>\n          Object.assign(file, {\n            preview: file,\n          })\n        )\n      )\n    },\n  })\n\n  const images = files.map((file) => (\n    <div key={file.name}>\n      <div>\n        <audio controls>\n          <source src={file} type=\"audio/mpeg\"/>\n        </audio>\n      </div>\n    </div>\n  ))\n\n  return (\n    <div className=\"App\">\n      <div {...getRootProps()}>\n        <input {...getInputProps()} />\n        <p>Drop files here</p>\n      </div>\n      <div>{images}</div>\n    </div>\n  )\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}