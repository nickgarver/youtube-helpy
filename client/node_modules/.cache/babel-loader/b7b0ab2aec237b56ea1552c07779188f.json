{"ast":null,"code":"import _objectSpread from \"/Users/luna/Documents/GitHub/youtube-helpy/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"/Users/luna/Documents/GitHub/youtube-helpy/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/luna/Documents/GitHub/youtube-helpy/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/luna/Documents/GitHub/youtube-helpy/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/luna/Documents/GitHub/youtube-helpy/client/src/components/FileUpload.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useState } from 'react';\nimport Message from './Message';\nimport Progress from './Progress';\nimport { useDropzone } from \"react-dropzone\";\nimport axios from 'axios';\n\nvar FileUpload = function FileUpload() {\n  _s();\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      files = _useState2[0],\n      setFiles = _useState2[1];\n\n  var _useState3 = useState('Drop Mp3 here'),\n      _useState4 = _slicedToArray(_useState3, 2),\n      filename = _useState4[0],\n      setFilename = _useState4[1];\n\n  var _useState5 = useState({}),\n      _useState6 = _slicedToArray(_useState5, 2),\n      uploadedFile = _useState6[0],\n      setUploadedFile = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      message = _useState8[0],\n      setMessage = _useState8[1];\n\n  var _useState9 = useState(0),\n      _useState10 = _slicedToArray(_useState9, 2),\n      uploadPercentage = _useState10[0],\n      setUploadPercentage = _useState10[1];\n\n  var _useDropzone = useDropzone({\n    maxFiles: 1,\n    // number of files,\n    accept: \"audio/mpeg\",\n    onDrop: function onDrop(acceptedFiles) {\n      setFiles(acceptedFiles.map(function (file) {\n        return Object.assign(file, {\n          preview: URL.createObjectURL(file)\n        });\n      }));\n    }\n  }),\n      getRootProps = _useDropzone.getRootProps,\n      getInputProps = _useDropzone.getInputProps; // const onChange = acceptedFiles => {\n  //   setFile(acceptedFiles.target.files[0]);\n  //   setFilename(acceptedFiles.target.files[0].name);\n  // };\n\n\n  var onSubmit = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n      var formData, res, _res$data, fileName, filePath;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              e.preventDefault();\n              formData = new FormData();\n              formData.append('file', file);\n              _context.prev = 3;\n              _context.next = 6;\n              return axios.post('/upload', formData, {\n                headers: {\n                  'Content-Type': 'multipart/form-data'\n                },\n                onUploadProgress: function onUploadProgress(progressEvent) {\n                  setUploadPercentage(parseInt(Math.round(progressEvent.loaded * 100 / progressEvent.total))); // Clear percentage\n\n                  setTimeout(function () {\n                    return setUploadPercentage(0);\n                  }, 10000);\n                }\n              });\n\n            case 6:\n              res = _context.sent;\n              _res$data = res.data, fileName = _res$data.fileName, filePath = _res$data.filePath;\n              setUploadedFile({\n                fileName,\n                filePath\n              });\n              setMessage('File Uploaded');\n              _context.next = 15;\n              break;\n\n            case 12:\n              _context.prev = 12;\n              _context.t0 = _context[\"catch\"](3);\n\n              if (_context.t0.response.status === 500) {\n                setMessage('There was a problem with the server');\n              } else {\n                setMessage(_context.t0.response.data.msg);\n              }\n\n            case 15:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[3, 12]]);\n    }));\n\n    return function onSubmit(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [message ? /*#__PURE__*/_jsxDEV(Message, {\n      msg: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 18\n    }, _this) : null, /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", _objectSpread(_objectSpread({\n        className: \"custom-file mb-4\"\n      }, getRootProps()), {}, {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", _objectSpread({\n          type: \"file\",\n          className: \"custom-file-input\",\n          id: \"customFile\"\n        }, getInputProps()), void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"custom-file-label\",\n          htmlFor: \"customFile\",\n          children: filename\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, _this)]\n      }), void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Progress, {\n        percentage: uploadPercentage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Upload\",\n        className: \"btn btn-primary btn-block mt-4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, _this), uploadedFile ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row mt-5\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-6 m-auto\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-center\",\n          children: uploadedFile.fileName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, _this), /*#__PURE__*/_jsxDEV(\"audio\", {\n          controls: true,\n          children: /*#__PURE__*/_jsxDEV(\"source\", {\n            src: uploadedFile.filePath,\n            type: \"audio/mpeg\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 15\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }, _this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(FileUpload, \"5mNM/+MQUNY/HOZKfoiKb8HerZ4=\", false, function () {\n  return [useDropzone];\n});\n\n_c = FileUpload;\nexport default FileUpload;\n\nvar _c;\n\n$RefreshReg$(_c, \"FileUpload\");","map":{"version":3,"sources":["/Users/luna/Documents/GitHub/youtube-helpy/client/src/components/FileUpload.js"],"names":["React","Fragment","useState","Message","Progress","useDropzone","axios","FileUpload","files","setFiles","filename","setFilename","uploadedFile","setUploadedFile","message","setMessage","uploadPercentage","setUploadPercentage","maxFiles","accept","onDrop","acceptedFiles","map","file","Object","assign","preview","URL","createObjectURL","getRootProps","getInputProps","onSubmit","e","preventDefault","formData","FormData","append","post","headers","onUploadProgress","progressEvent","parseInt","Math","round","loaded","total","setTimeout","res","data","fileName","filePath","response","status","msg"],"mappings":"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","sourcesContent":["import React, { Fragment, useState } from 'react';\nimport Message from './Message';\nimport Progress from './Progress';\nimport { useDropzone } from \"react-dropzone\"\nimport axios from 'axios';\n\nconst FileUpload = () => {\n  const [files, setFiles] = useState([]);\n  const [filename, setFilename] = useState('Drop Mp3 here');\n  const [uploadedFile, setUploadedFile] = useState({});\n  const [message, setMessage] = useState('');\n  const [uploadPercentage, setUploadPercentage] = useState(0);\n\n  const { getRootProps, getInputProps } = useDropzone({\n    maxFiles: 1, // number of files,\n    accept: \"audio/mpeg\",\n    onDrop: acceptedFiles => {\n      setFiles(acceptedFiles.map(file => Object.assign(file, {\n        preview: URL.createObjectURL(file)\n      })));\n    }\n  });\n\n  // const onChange = acceptedFiles => {\n  //   setFile(acceptedFiles.target.files[0]);\n  //   setFilename(acceptedFiles.target.files[0].name);\n  // };\n\n  const onSubmit = async e => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append('file', file);\n\n    try {\n      const res = await axios.post('/upload', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        },\n        onUploadProgress: progressEvent => {\n          setUploadPercentage(\n            parseInt(\n              Math.round((progressEvent.loaded * 100) / progressEvent.total)\n            )\n          );\n\n          // Clear percentage\n          setTimeout(() => setUploadPercentage(0), 10000);\n        }\n      });\n\n      const { fileName, filePath } = res.data;\n\n      setUploadedFile({ fileName, filePath });\n\n      setMessage('File Uploaded');\n    } catch (err) {\n      if (err.response.status === 500) {\n        setMessage('There was a problem with the server');\n      } else {\n        setMessage(err.response.data.msg);\n      }\n    }\n  };\n\n  return (\n    <Fragment>\n      {message ? <Message msg={message} /> : null}\n      <form onSubmit={onSubmit}>\n        <div className='custom-file mb-4' {...getRootProps()}>\n          <input type='file' className='custom-file-input' id='customFile' {...getInputProps()} />\n          <label className='custom-file-label' htmlFor='customFile'>\n            {filename}\n          </label>\n        </div>\n\n        <Progress percentage={uploadPercentage} />\n\n        <input\n          type='submit'\n          value='Upload'\n          className='btn btn-primary btn-block mt-4'\n        />\n      </form>\n      {uploadedFile ? (\n        <div className='row mt-5'>\n          <div className='col-md-6 m-auto'>\n            <h3 className='text-center'>{uploadedFile.fileName}</h3>\n            <audio controls>\n              <source src={uploadedFile.filePath} type=\"audio/mpeg\"/>\n            </audio>\n          </div>\n        </div>\n      ) : null}\n    </Fragment>\n  );\n};\n\nexport default FileUpload;\n"]},"metadata":{},"sourceType":"module"}